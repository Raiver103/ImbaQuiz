
services:
  # Ваш quiz-service
  quiz-service:
    build:
      context: .  
      dockerfile: quiz-service/Dockerfile
    ports:
      - "5000:80"   # Прокси порта API (можно изменить на другой)
    depends_on:
      - db
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=db;Database=QuizService;User=sa;Password=Password123;TrustServerCertificate=True;
    networks:
      - imbaquiz-net
    restart: always
    command: >
      bash -c "
        until nc -z -v -w30 db 1433; do echo 'Waiting for database connection...'; sleep 5; done;
        dotnet ef database update --no-build &&
        dotnet user_activity_service.API.dll"

  # База данных SQL Server
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password123
    ports:
      - "1433:1433"
    networks:
      - imbaquiz-net
    volumes:
      - mssql_data:/var/opt/mssql
    restart: always 
  
  frontend:
    build:
      context: ./ImbaQuiz.front
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://quiz-service
      - REACT_APP_ACTIVITY_API_URL=http://user-activity-service
    depends_on:
      - quiz-service
    networks:
      - imbaquiz-net
    restart: always
   
  # Лог-сервис
  log-service:
    build:
      context: ./log-service
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    networks:
      - imbaquiz-net
    depends_on:
      - rabbitmq
      - mongo
    restart: always 

  # MongoDB
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - imbaquiz-net
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"     # Порт для общения между сервисами
      - "15672:15672"   # Веб-интерфейс RabbitMQ
    networks:
      - imbaquiz-net
    restart: always

  news-service:
    build:
      context: .
      dockerfile: news-service/Dockerfile
    ports:
      - "5100:80"
    depends_on:
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80  # Явно указываем порт 80 
      - Redis__ConnectionString=redis:6379
    networks:
      - imbaquiz-net
    restart: always

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - imbaquiz-net   
    restart: always  

# Настройки сети
networks:
  imbaquiz-net:
    driver: bridge

# Монтируем том для сохранения данных SQL Server и PostgreSQL
volumes:
  mssql_data: 
